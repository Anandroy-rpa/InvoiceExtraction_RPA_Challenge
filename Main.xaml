<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="654,723" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="This will read pdf from website extract the data and fill it in the CSV" DisplayName="InvoiceExtraction" sap:VirtualizedContainerService.HintSize="634,663" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd1:DataTable" Name="outputDt" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 290,107.5 290,124.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,216</av:Point>
          <av:Size x:Key="ShapeSize">200,108</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="RpaChallengeInvoiceExtraction" DisplayName="RpaChallenge" sap:VirtualizedContainerService.HintSize="476,1373" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Default="https://rpachallengeocr.azurewebsites.net/" Name="Url" />
          <Variable x:TypeArguments="ui:GenericValue" Name="Id" />
          <Variable x:TypeArguments="ui:GenericValue" Name="dueDate" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="434,1254" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[Url]">
          <ui:OpenBrowser.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1155" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Default="2" Name="ctColumn" />
                  <Variable x:TypeArguments="x:Int32" Default="1" Name="ctRow" />
                  <Variable x:TypeArguments="ui:GenericValue" Name="CurrentDate" />
                  <Variable x:TypeArguments="x:String" Name="dynamicCloumn" />
                  <Variable x:TypeArguments="x:String" Default="C:\Users\an20101648\Documents\UiPath\InvoiceExtraction_RPA_Challenge\Invoice.csv" Name="csvPath" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'A  /'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="70fee26c510a6c38b7363f8cf955b7d8" Selector="&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl tag='A' idx='1' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  start'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2be698e60a0b32d5a6ec5f51dc1d59e3" Selector="&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl tag='BUTTON' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <While DisplayName="While(Page)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="While_3">
                  <While.Variables>
                    <Variable x:TypeArguments="x:Int32" Default="1" Name="ctPage" />
                  </While.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <While.Condition>[ctPage&lt;4]</While.Condition>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,489" sap2010:WorkflowViewState.IdRef="Sequence_20">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <While DisplayName="While(Row)" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="While_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <While.Condition>[ctRow&lt;=4]</While.Condition>
                      <Sequence sap:VirtualizedContainerService.HintSize="304,434" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <While DisplayName="While(Column)" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="While_1">
                          <While.Variables>
                            <Variable x:TypeArguments="s:DateTime" Name="dueDateTime" />
                            <Variable x:TypeArguments="s:DateTime" Name="currentDateTime" />
                          </While.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <While.Condition>[ctColumn&lt;4]</While.Condition>
                          <Sequence sap:VirtualizedContainerService.HintSize="242,476" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Read Id" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[dynamicCloumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl tag='TABLE' /&gt;&lt;webctrl tag='TD' tableCol='"+ctColumn.ToString+"' idx='"+ctRow.ToString+"' /&gt;"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_14" Text="[&quot;ctClomun: &quot;+ctColumn.ToString]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_4">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="9f842339369a46a4ed0198fcd524020f" Selector="[dynamicCloumn]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[Id]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_15" Text="[&quot;id:&quot;+Id]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="Read DueDate" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[ctColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[ctColumn+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_16" Text="[&quot;ctClomun:&quot;+ctColumn.ToString]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[dynamicCloumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl tag='TABLE' /&gt;&lt;webctrl tag='TD' tableCol='"+ctColumn.ToString+"' idx='"+ctRow.ToString+"' /&gt;"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="GetValue_5">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7190a1e06c6b22266475e511e3d41155" Selector="[dynamicCloumn]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[dueDate]</OutArgument>
                                </ui:GetValue.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:GetValue>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_17" Text="[&quot;due date:&quot;+dueDate]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[dueDateTime]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[Date.ParseExact(dueDate, "dd-MM-yyyy", System.Globalization.CultureInfo.CurrentCulture)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <Sequence DisplayName="CurrentDate" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[CurrentDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[system.DateTime.now.toString("dd-MM-yyyy")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_18" Text="[&quot;currentdate: &quot;+CurrentDate]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[currentDateTime]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[Date.ParseExact(CurrentDate, "dd-MM-yyyy", System.Globalization.CultureInfo.CurrentCulture)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <Sequence DisplayName="CheckDueDate" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="invoiceNo" />
                                <Variable x:TypeArguments="x:String" Name="InvoiceDate" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="companyName" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="totalAmount" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[ctColumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[ctColumn+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_19" Text="[&quot;ctClomun:&quot;+ctColumn.ToString]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[dynamicCloumn]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl tag='TABLE' /&gt;&lt;webctrl tag='TD' tableCol='"+ctColumn.ToString+"' idx='"+ctRow.ToString+"' /&gt;"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[currentDateTime&gt;=dueDateTime]" sap:VirtualizedContainerService.HintSize="484,213" sap2010:WorkflowViewState.IdRef="If_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Boolean" Name="ImgExists" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="763,68" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="False">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[dynamicCloumn]">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <ui:UiElementExists DisplayName="Element Exists 'IMG'" Exists="[ImgExists]" sap:VirtualizedContainerService.HintSize="763,106" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                                      <ui:UiElementExists.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="706f60b9893ca3854b00ca2b775883f1" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:UiElementExists.Target>
                                    </ui:UiElementExists>
                                    <Sequence DisplayName="ExtractPdfData" sap:VirtualizedContainerService.HintSize="763,2310" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[ImgExists]" sap:VirtualizedContainerService.HintSize="721,2218" sap2010:WorkflowViewState.IdRef="If_5">
                                        <If.Then>
                                          <Sequence DisplayName="Aenean LLC" sap:VirtualizedContainerService.HintSize="476,2071" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'UiExplorer.exe UI'" sap:VirtualizedContainerService.HintSize="434,1826" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="66b7a5dfbd8b0bdb4e8e2581c28c629c" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;">
                                              <ui:BrowserScope.Body>
                                                <ActivityAction x:TypeArguments="x:Object">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1680" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="83e7d2da7e6b6944a7b555fb0af767ba" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="pgup" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="138972a6fdbcbcb32d9f610baeee227b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_16">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_17" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="34969a615548e7be855330369ded0808" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="679, 124, 62, 19" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[invoiceNo.Replace("#",String.Empty).Trim]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_17">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_18" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="98ef2b858ffba88b3d5990e8936d399a" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="647, 99, 108, 27" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(InvoiceDate).ToString("dd-MM-yyyy")]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_18">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_19" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="bed079e3fead88350dfbb4d482fe1e37" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="47, 57, 156, 35" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[companyName]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="pgdn" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="138972a6fdbcbcb32d9f610baeee227b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_19">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_20" Image="[Image]" Profile="Screen" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="47c0da85b6e978baacc14ee4a4e1f618" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="640, 668, 56, 16" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalAmount]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CloseTab_1" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:BrowserScope.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:BrowserScope>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="CommentOut_17">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate 'IMG'" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Activate_1">
                                                    <ui:Activate.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7139ef5d5f1c8aba0cb939f4f33e1671" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                        <ui:Target.TimeoutMS>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:Target.TimeoutMS>
                                                        <ui:Target.WaitForReady>
                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                        </ui:Target.WaitForReady>
                                                      </ui:Target>
                                                    </ui:Activate.Target>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:Activate>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Id,dueDate,invoiceNo,InvoiceDate,companyName,totalAmount}]" DataTable="[outputDt]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Sit Amet Corp" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_18">
                                              <ui:CommentOut.Body>
                                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Activate_2">
                                                    <ui:Activate.Target>
                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="989be2188844553f8841d79ac69a3b17" Selector="&lt;html app='chrome.exe' title='*.jpg (816×1056)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                        <ui:Target.TimeoutMS>
                                                          <InArgument x:TypeArguments="x:Int32" />
                                                        </ui:Target.TimeoutMS>
                                                        <ui:Target.WaitForReady>
                                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                                        </ui:Target.WaitForReady>
                                                      </ui:Target>
                                                    </ui:Activate.Target>
                                                  </ui:Activate>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:CommentOut>
                                            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'UiExplorer.exe UI'" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="33210154d5549832fe06440e6cc5bd30" Selector="&lt;html app='chrome.exe' title='*.jpg (816×1056)' /&gt;">
                                              <ui:BrowserScope.Body>
                                                <ActivityAction x:TypeArguments="x:Object">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1571" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="eb082d513ddec26f26131d20a8e112bd" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="pgup" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="138972a6fdbcbcb32d9f610baeee227b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_20">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_21" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="b917a9a636ddad48fbaeea5c5a30710b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="712, 78, 63, 26" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_21">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_22" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="ed802721d679196866f78c8e7f377128" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="665, 141, 109, 35" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_20">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[(Date.ParseExact(InvoiceDate,"dd-MM-yyyy",System.Globalization.CultureInfo.CurrentCulture)).ToString]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_22">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_23" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="3748dca65c328ce7d19e62d78093adb5" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="58, 175, 111, 28" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[companyName]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="pgdn" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="138972a6fdbcbcb32d9f610baeee227b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_23">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_24" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="b3988fbafdd40a2960dc57f1673777f9" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="696, 591, 66, 24" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalAmount]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CloseTab_2" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:BrowserScope.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:BrowserScope>
                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Id,dueDate,invoiceNo,InvoiceDate,companyName,totalAmount}]" DataTable="[outputDt]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </Sequence>
                        </While>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[ctColumn]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">2</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[ctRow]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[ctRow+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_12" Text="[&quot;ctRow:&quot;+ctRow.ToString]" />
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </Sequence>
                    </While>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[ctRow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[ctPage]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[ctPage+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'A  tableSandbox_next'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7e47a7664d95ca2ff81ca12de7e82676" Selector="&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl tag='A' aaname='Next' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </While>
                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[outputDt]" Delimitator="Comma" DisplayName="Write CSV" FilePath="C:\Users\an20101648\Documents\UiPath\InvoiceExtraction_RPA_Challenge\Invoice.csv" sap:VirtualizedContainerService.HintSize="334,152" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="f8e36a869a146dab79d9ddc3f99d4e52" Selector="&lt;html app='chrome.exe' title='Automation Challenge - OCR' /&gt;&lt;webctrl name='csv' tag='INPUT' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'ComboBox'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="[csvPath]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d9d56d49d97733547ff5917171913e50" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Open' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bb4e7e58d7660356399c653a1da72eb1" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Open' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Open' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </ActivityAction>
          </ui:OpenBrowser.Body>
        </ui:OpenBrowser>
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">0,437</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="dt" />
          <Variable x:TypeArguments="ui:GenericValue" Name="dueDate" />
          <Variable x:TypeArguments="ui:GenericValue" Name="Invtxt" />
          <Variable x:TypeArguments="ui:GenericValue" Name="dttxt" />
          <Variable x:TypeArguments="ui:GenericValue" Name="comTxt" />
          <Variable x:TypeArguments="ui:GenericValue" Name="totalTxt" />
          <Variable x:TypeArguments="x:Boolean" Name="img" />
          <Variable x:TypeArguments="ui:UiElement" Name="exists" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="726,51" sap2010:WorkflowViewState.IdRef="CommentOut_12">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:UiElementExists DisplayName="Element Exists 'IMG'" Exists="[img]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                <ui:UiElementExists.Target>
                  <ui:Target Element="{x:Null}" InformativeScreenshot="755ce9952675476299b65653caa18ba0" Selector="&lt;html app='chrome.exe' title='*.jpg *' /&gt;&lt;webctrl tag='IMG' /&gt;">
                    <ui:Target.ClippingRegion>
                      <ui:Region Rectangle="45, 23, 205, 116" />
                    </ui:Target.ClippingRegion>
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:UiElementExists.Target>
              </ui:UiElementExists>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="726,51" sap2010:WorkflowViewState.IdRef="CommentOut_13">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="797,143" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[img]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,983" sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                      <ui:GetOCRText.OCREngine>
                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                          <ActivityFunc.Argument>
                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                          </ActivityFunc.Argument>
                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_2" Image="[Image]" />
                        </ActivityFunc>
                      </ui:GetOCRText.OCREngine>
                      <ui:GetOCRText.Target>
                        <ui:Target Element="{x:Null}" InformativeScreenshot="a76d015ec3c5d94de662403d34aa80fc" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                          <ui:Target.ClippingRegion>
                            <ui:Region Rectangle="560, 101, 43, 16" />
                          </ui:Target.ClippingRegion>
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:GetOCRText.Target>
                      <ui:GetOCRText.Text>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Invtxt]</OutArgument>
                      </ui:GetOCRText.Text>
                    </ui:GetOCRText>
                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                      <ui:GetOCRText.OCREngine>
                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                          <ActivityFunc.Argument>
                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                          </ActivityFunc.Argument>
                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" />
                        </ActivityFunc>
                      </ui:GetOCRText.OCREngine>
                      <ui:GetOCRText.Target>
                        <ui:Target Element="{x:Null}" InformativeScreenshot="b3fcba9df81de16b9e79c266add6156d" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                          <ui:Target.ClippingRegion>
                            <ui:Region Rectangle="537, 84, 68, 14" />
                          </ui:Target.ClippingRegion>
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:GetOCRText.Target>
                      <ui:GetOCRText.Text>
                        <OutArgument x:TypeArguments="ui:GenericValue">[dttxt]</OutArgument>
                      </ui:GetOCRText.Text>
                    </ui:GetOCRText>
                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                      <ui:GetOCRText.OCREngine>
                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                          <ActivityFunc.Argument>
                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                          </ActivityFunc.Argument>
                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" />
                        </ActivityFunc>
                      </ui:GetOCRText.OCREngine>
                      <ui:GetOCRText.Target>
                        <ui:Target Element="{x:Null}" InformativeScreenshot="d82489d17cdc34e9c998850aba89cf6d" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                          <ui:Target.ClippingRegion>
                            <ui:Region Rectangle="44, 44, 121, 34" />
                          </ui:Target.ClippingRegion>
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:GetOCRText.Target>
                      <ui:GetOCRText.Text>
                        <OutArgument x:TypeArguments="ui:GenericValue">[comTxt]</OutArgument>
                      </ui:GetOCRText.Text>
                    </ui:GetOCRText>
                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                      <ui:GetOCRText.OCREngine>
                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                          <ActivityFunc.Argument>
                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                          </ActivityFunc.Argument>
                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_5" Image="[Image]" Profile="Screen" />
                        </ActivityFunc>
                      </ui:GetOCRText.OCREngine>
                      <ui:GetOCRText.Target>
                        <ui:Target Element="{x:Null}" InformativeScreenshot="9b7b4b7bb78001f615483e6b2a1b0064" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                          <ui:Target.ClippingRegion>
                            <ui:Region Rectangle="519, 545, 56, 16" />
                          </ui:Target.ClippingRegion>
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:GetOCRText.Target>
                      <ui:GetOCRText.Text>
                        <OutArgument x:TypeArguments="ui:GenericValue">[totalTxt]</OutArgument>
                      </ui:GetOCRText.Text>
                    </ui:GetOCRText>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_21" Text="[Invtxt+&quot; &quot;+dttxt+&quot; &quot;+comTxt+&quot; &quot;+totalTxt]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_22" Text="[&quot;else&quot;]" />
                </If.Else>
              </If>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:FindOCRText DisplayName="Find OCR Text Position 'IMG'" Element="[exists]" sap:VirtualizedContainerService.HintSize="726,201" sap2010:WorkflowViewState.IdRef="FindOCRText_1" Occurrence="1" Text="INVOICE">
          <ui:FindOCRText.OCREngine>
            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
              <ActivityFunc.Argument>
                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
              </ActivityFunc.Argument>
              <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_15" Image="[Image]" />
            </ActivityFunc>
          </ui:FindOCRText.OCREngine>
          <ui:FindOCRText.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="42df2aa35391e1992179817040b66b5a" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:FindOCRText.Target>
        </ui:FindOCRText>
        <ui:AnchorContextAware DesignAnchor="[Rectangle.FromLTRB(802, 110, 928, 145)]" DesignTarget="[Rectangle.FromLTRB(797, 110, 940, 149)]" DisplayName="Context Aware Anchor" sap:VirtualizedContainerService.HintSize="726,198" sap2010:WorkflowViewState.IdRef="AnchorContextAware_1">
          <ui:AnchorContextAware.AnchorProvider>
            <ActivityAction x:TypeArguments="ui:Anchor2Data">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:Anchor2Data" Name="ContextAnchor2Data" />
              </ActivityAction.Argument>
              <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_10">
                <ui:WaitUiElementAppear.Target>
                  <ui:Target Element="{x:Null}" InformativeScreenshot="a8f52bde8db8357f980562b5eb513015" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                    <ui:Target.ClippingRegion>
                      <ui:Region Rectangle="484, 39, 126, 35" />
                    </ui:Target.ClippingRegion>
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:WaitUiElementAppear.Target>
              </ui:WaitUiElementAppear>
            </ActivityAction>
          </ui:AnchorContextAware.AnchorProvider>
          <ui:AnchorContextAware.TargetProvider>
            <ActivityAction x:TypeArguments="ui:Anchor2Data">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:Anchor2Data" Name="ContextAnchor2Data" />
              </ActivityAction.Argument>
              <ui:GetOCRText Text="{x:Null}" WordsInfo="{x:Null}" DisplayName="Get OCR Text" sap:VirtualizedContainerService.HintSize="334,130" sap2010:WorkflowViewState.IdRef="GetOCRText_15">
                <ui:GetOCRText.OCREngine>
                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_16" Image="[Image]" />
                  </ActivityFunc>
                </ui:GetOCRText.OCREngine>
                <ui:GetOCRText.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:GetOCRText.Target>
              </ui:GetOCRText>
            </ActivityAction>
          </ui:AnchorContextAware.TargetProvider>
        </ui:AnchorContextAware>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="726,59" sap2010:WorkflowViewState.IdRef="MessageBox_25" Text="[exists.ClippingRegion]" />
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="726,51" sap2010:WorkflowViewState.IdRef="CommentOut_14">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[exists]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,515" sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Invoice" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_6">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_11" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="80b55c0387d1eca9be510ea0839d03ab" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="619, 68, 46, 22" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[Invtxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_6">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="ffef9bc0503206fd20d5a800ac736fee" Selector="&lt;html app='chrome.exe' title='sample1.jpg (816×1056)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="517, 32, 155, 39" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Date" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_7">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_12">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_12" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="053894f6ef12391e4c16da3b9085a492" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="583, 128, 71, 20" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[dttxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_7">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="90d99f2ee46c444dd3f3ba50c18b0fe9" Selector="&lt;html app='chrome.exe' title='sample1.jpg (816×1056)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="495, 130, 31, 15" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Company" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_8">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_13">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_13" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="f50e47795f6301d4b7634600e97ff4a6" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="44, 146, 105, 25" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[comTxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_8">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="bff6004ded7e88eabbe9cf854edb7087" Selector="&lt;html app='chrome.exe' title='sample1.jpg (816×1056)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="43, 152, 96, 17" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Total" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_9">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_14">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_14" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="3b3cafcf7537d04869ad568e4950faaf" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="603, 512, 56, 22" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[totalTxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_9">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="a6f2a06208faa3d9f91ac156ac630e31" Selector="&lt;html app='chrome.exe' title='sample1.jpg (816×1056)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="492, 514, 35, 17" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_24" Text="[Invtxt+&quot; &quot;+dttxt+&quot; &quot;+comTxt+&quot; &quot;+totalTxt]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,515" sap2010:WorkflowViewState.IdRef="Sequence_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Invoice" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_2">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="8c5726712540292edac6f9a180e890d0" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="558, 101, 43, 17" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[Invtxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="d391f26c7a3ef2dc51fc27a0bd6cc8d0" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="512, 102, 43, 15" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Date" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_3">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="319729175d272e428f098a3f17cf042c" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="533, 79, 74, 25" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[dttxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="17d9ad8942f7606e420d3915826f4f6d" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="474, 38, 141, 39" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="company " sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_4">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="ea8add54b9bf268daa8c3f4ba450cd73" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="34, 37, 145, 43" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[comTxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_4">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="f2fe1444abde3e7e90342a046f98ba35" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="42, 80, 92, 23" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:AnchorBase AnchorPosition="Auto" DisplayName="Total" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="AnchorBase_5">
                      <ui:AnchorBase.Action>
                        <ActivityAction x:TypeArguments="ui:Anchor">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
                          </ActivityAction.Argument>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_9" Image="[Image]" Profile="Screen" />
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" InformativeScreenshot="e704041a807750ee2649186c348517d5" Selector="&lt;webctrl tag='IMG' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="518, 543, 62, 15" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="ui:GenericValue">[totalTxt]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                        </ActivityAction>
                      </ui:AnchorBase.Action>
                      <ui:AnchorBase.AnchorProvider>
                        <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_5">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target Element="{x:Null}" InformativeScreenshot="e3272d3b81e3796cf67faa4e60802862" Selector="&lt;html app='chrome.exe' title='sample2.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="48, 541, 50, 21" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </ui:AnchorBase.AnchorProvider>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AnchorBase>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_23" Text="[Invtxt+&quot; &quot;+dttxt+&quot; &quot;+comTxt+&quot; &quot;+totalTxt]" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,124.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,175.5 290,216</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:BuildDataTable DataTable="[outputDt]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;ID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;DueDate&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;InvoiceNo&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;InvoiceDate&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;CompanyName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;TotalDue&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BuildDataTable>
      <FlowStep.Next>
        <x:Reference>__ReferenceID0</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>